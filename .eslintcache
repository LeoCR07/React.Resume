[{"C:\\github_projects\\resume\\src\\index.js":"1","C:\\github_projects\\resume\\src\\App.js":"2","C:\\github_projects\\resume\\src\\reportWebVitals.js":"3","C:\\github_projects\\resume\\src\\components\\Profile\\Profile.js":"4","C:\\github_projects\\resume\\src\\components\\Header\\Header.js":"5","C:\\github_projects\\resume\\src\\components\\Footer\\Footer.js":"6","C:\\github_projects\\resume\\src\\pages\\Portfolio\\Portfolio.js":"7","C:\\github_projects\\resume\\src\\pages\\Resume\\Resume.js":"8","C:\\github_projects\\resume\\src\\components\\Timeline\\Timeline.js":"9","C:\\github_projects\\resume\\src\\utils\\resumeData.js":"10","C:\\github_projects\\resume\\src\\components\\Button\\Button.js":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":1105,"mtime":1611721792141,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":2351,"mtime":1611029913946,"results":"16","hashOfConfig":"13"},{"size":1746,"mtime":1611721814059,"results":"17","hashOfConfig":"13"},{"size":824,"mtime":1611029057855,"results":"18","hashOfConfig":"13"},{"size":3721,"mtime":1611717885154,"results":"19","hashOfConfig":"13"},{"size":10474,"mtime":1611721866558,"results":"20","hashOfConfig":"13"},{"size":1490,"mtime":1610780299295,"results":"21","hashOfConfig":"13"},{"size":7528,"mtime":1611721685954,"results":"22","hashOfConfig":"13"},{"size":428,"mtime":1610990291735,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"64hhy0",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\github_projects\\resume\\src\\index.js",[],["52","53"],"C:\\github_projects\\resume\\src\\App.js",[],"C:\\github_projects\\resume\\src\\reportWebVitals.js",[],"C:\\github_projects\\resume\\src\\components\\Profile\\Profile.js",["54"],"import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\nimport GetApp from '@material-ui/icons/GetApp';\r\n\r\nimport profilePhoto from '../../assets/images/profile_photo.jpg';\r\nimport resumeData from '../../utils/resumeData.js';\r\nimport CustomTimeline, { CustomTimelineSeparator } from '../Timeline/Timeline'\r\nimport CustomButton from '../Button/Button'\r\n\r\nimport './Profile.css'\r\n\r\nconst CustomTimelineItem = ({title, text, link}) => (\r\n  <TimelineItem className='custom-item'>\r\n    <CustomTimelineSeparator />\r\n    <TimelineContent className='timeline-content'>\r\n      { link ? (\r\n        <Typography className='timeline-item-text'>\r\n          <span>{title}:</span>{\" \"}\r\n          <a href={link} target='_blank' >\r\n            {text}\r\n          </a>\r\n        </Typography>\r\n      ) : (\r\n        <Typography className='timeline-item-text'>\r\n          <span>{title}:</span> {text}\r\n        </Typography>\r\n      )}\r\n    </TimelineContent>\r\n  </TimelineItem>\r\n);\r\n\r\nfunction Profile() {\r\n  return (\r\n    <div className='profile containter-shadow'>\r\n        <div className='profile-name'>\r\n            <Typography className='name'>{resumeData.name}</Typography>\r\n            <Typography className='title'>{resumeData.title}</Typography>\r\n        </div>\r\n\r\n        <figure className='profile-image'>\r\n            <img src={profilePhoto} alt=\"\"></img>\r\n        </figure>\r\n\r\n        <div className='profile-information'>\r\n            <CustomTimeline icon={<PersonOutlineIcon />}>\r\n              <CustomTimelineItem title='Name' text={resumeData.name} />\r\n              <CustomTimelineItem title='Title' text={resumeData.title} />\r\n              <CustomTimelineItem title='Email' text={resumeData.email} />\r\n\r\n              {Object.keys(resumeData.socials).map((key) => (\r\n                <CustomTimelineItem title={key} text={resumeData.socials[key].text} link={resumeData.socials[key].url} />\r\n              ))}\r\n            </CustomTimeline>\r\n            <div className='button-container' >\r\n              <CustomButton text={'Download CV'} icon={<GetApp />} />\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;","C:\\github_projects\\resume\\src\\components\\Header\\Header.js",["55","56","57","58","59","60","61"],"C:\\github_projects\\resume\\src\\components\\Footer\\Footer.js",[],"C:\\github_projects\\resume\\src\\pages\\Portfolio\\Portfolio.js",["62","63","64","65","66"],"import React, { useState } from 'react'\r\nimport { Grid, Typography, Tabs, Tab, Card, CardContent, CardActionArea, CardMedia, Grow, DialogContent, Dialog, DialogTitle, DialogActions } from '@material-ui/core';\r\n\r\nimport resumeData from '../../utils/resumeData';\r\nimport './Portfolio.css'\r\n\r\nconst Portfolio = () => {\r\n\r\n    const [tabValue, setTabValue] = useState(\"All\");\r\n    const [projectDialog, setProjectDialog] = useState(false);\r\n\r\n    const ProjectDialog = () => (\r\n        <Dialog className='project-dialog' open={projectDialog} onClose={() => setProjectDialog(false)}>\r\n            <DialogTitle onClose={() => setProjectDialog(false)}>\r\n                {projectDialog.title}\r\n            </DialogTitle>\r\n            <img src={projectDialog.image} alt=\"\" className='project-dialog-image' />\r\n            <DialogContent>\r\n                <Typography className='project-dialog-description'>{projectDialog.description}</Typography>\r\n            </DialogContent>\r\n\r\n            <DialogActions className='project-dialog-actions'>\r\n                {projectDialog?.links?.map(link => (\r\n                    <a href={link.link} target='_blank' className='project-dialog-icon'>{link.icon}</a>\r\n                ))}\r\n            </DialogActions>\r\n        </Dialog>\r\n    )\r\n\r\n    return (\r\n        <Grid spacing={1} container className='section pb-45 pt-45'>\r\n            {/* Title */}\r\n            <Grid item className='section-title mb-20'>\r\n                <span></span>\r\n                <h6 className='section-title-text' >Portfolio</h6>\r\n            </Grid>\r\n\r\n            {/* Tabs */}\r\n            <Grid item xs={12} className='' >\r\n                <Tabs value={tabValue} indicatorColor='white' className='customTabs' onChange={(event, newValue) => setTabValue(newValue) } >\r\n                    <Tab label='All' value='All' className={tabValue == 'All' ? 'customTabs-item active' : 'customTabs-item'} />\r\n\r\n                    \r\n                    {[...new Set(resumeData.portfolio.map(item => item.tag))].map(tag => (\r\n                        <Tab label={tag} value={tag} className={tabValue == tag ? 'customTabs-item active' : 'customTabs-item'} />\r\n                    ))}\r\n\r\n                </Tabs>\r\n            </Grid>\r\n        \r\n            {/* Projects */}\r\n            <Grid item xs={12}>\r\n                <Grid container spacing={3}>\r\n                    {resumeData.portfolio.map(project => (\r\n                        <>\r\n                        {tabValue == project.tag || tabValue == \"All\" ? (\r\n                            <Grid item xs={12} sm={5} md={4} >\r\n                                <Grow in timeout={1000} >\r\n                                <Card className='custom-card' onClick={() => setProjectDialog(project)} >\r\n                                    <CardActionArea>\r\n                                        <CardMedia className='custom-card-image' component=\"img\" image={project.image} title={project.title} />\r\n                                        <CardContent>\r\n                                            <Typography variant=\"body2\" className='custom-card-title'>{project.title}</Typography>\r\n                                            <Typography variant='body2' className='custom-card-description' >{project.caption}</Typography>\r\n                                        </CardContent>\r\n                                    </CardActionArea>\r\n                                </Card>\r\n                                </Grow>\r\n                            </Grid>\r\n                        ) : null }\r\n                        </>\r\n                    ))}\r\n                </Grid>\r\n            </Grid>\r\n            <ProjectDialog />\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Portfolio\r\n","C:\\github_projects\\resume\\src\\pages\\Resume\\Resume.js",["67"],"import React from 'react';\r\nimport { Grid, Typography, Icon, Paper, TextField } from '@material-ui/core';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport CardMembershipIcon from '@material-ui/icons/CardMembership';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport CustomTimeline, { CustomTimelineSeparator } from '../../components/Timeline/Timeline'\r\nimport CustomButton from '../../components/Button/Button'\r\n\r\nimport resumeData from '../../utils/resumeData'\r\nimport './Resume.css'\r\n\r\n\r\nconst Resume = () => {\r\n    return (\r\n        <>  {/* About */}\r\n            <Grid container className='section pb-45 pt-45'>\r\n                <Grid item className='section-title mb-30'>\r\n                    <span></span>\r\n                    <h6 className='section-title-text' >About Me</h6>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Typography variant='body2' className='about-text' >{resumeData.about}</Typography>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            {/* Education and Experiences */}\r\n            <Grid container className='section'>\r\n                <Grid item className='section-title mb-30'>\r\n                    <span></span>\r\n                    <h6 className='section-title-text'>Resume</h6>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} className='section'>\r\n                <Grid container className='resume-timeline' >\r\n                    {/* Experiences */}\r\n                    <Grid item sm={12} md={6}>\r\n                        <CustomTimeline title='Work Experience' icon={<WorkIcon />}>\r\n                            {resumeData.experiences.map(experince => (\r\n                                <TimelineItem>\r\n                                    <CustomTimelineSeparator/>\r\n                                    <TimelineContent className='timeline-content' >\r\n                                        <Typography className='timeline-title'>{experince.title}</Typography>\r\n                                        <Typography variant='caption' className='timeline-date'>{experince.date}</Typography>\r\n                                        <Typography variant='body2' className='timeline-description'>{experince.description}</Typography>\r\n                                    </TimelineContent>\r\n                                </TimelineItem>\r\n                            ))}\r\n                        </CustomTimeline>\r\n                    </Grid>\r\n\r\n                    {/* Education */}\r\n                    <Grid item sm={12} md={6}>\r\n                        <CustomTimeline title='Education' icon={<SchoolIcon />}>\r\n                            {resumeData.educations.map(education => (\r\n                                <TimelineItem>\r\n                                    <CustomTimelineSeparator/>\r\n                                    <TimelineContent className='timeline-content' >\r\n                                        <Typography className='timeline-title'>{education.title}</Typography>\r\n                                        <Typography variant='caption' className='timeline-date'>{education.date}</Typography>\r\n                                        <Typography variant='body2' className='timeline-description'>{education.description}</Typography>\r\n                                    </TimelineContent>\r\n                                </TimelineItem>\r\n                            ))}\r\n                        </CustomTimeline>\r\n\r\n                        <CustomTimeline title=\"Certifications and Scores\" icon={<CardMembershipIcon />}>\r\n                            {resumeData.certifications.map(cerf => (\r\n                                <TimelineItem>\r\n                                    <CustomTimelineSeparator/>\r\n                                    <TimelineContent className='timeline-content' >\r\n                                        <Typography className='timeline-title'>{cerf.title}</Typography>\r\n                                        <Typography variant='caption' className='timeline-date'>{cerf.date}</Typography>\r\n                                        <Typography variant='body2' className='timeline-description'>{cerf.description}</Typography>\r\n                                    </TimelineContent>\r\n                                </TimelineItem>\r\n                            ))}\r\n                        </CustomTimeline>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            {/* Services */}\r\n            {/*<Grid container className='section pb-45 pt-45'>\r\n                <Grid item className='section-title mb-30'>\r\n                    <span></span>\r\n                    <h6 className='section-title-text'>My Services</h6>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <Grid container spacing={3} justify='space-around' >\r\n                        {resumeData.services.map(service => (\r\n                            <Grid item xs={12} sm={6} md={3} >\r\n                                <div className='service'>\r\n                                    <Icon className='service-icon'>{service.icon}</Icon>\r\n                                    <Typography className='service-title' variant='h6' >{service.title}</Typography>\r\n                                    <Typography className='service-description' variant='body2' >{service.description}</Typography>\r\n                                </div>\r\n                            </Grid>\r\n                        ))}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>*/}\r\n\r\n            {/* Skills */}\r\n            <Grid container className='section gray-bg pb-45 p-50'>\r\n                <Grid item xs={12}>\r\n                <Grid container spacing={3} justify='space-between' >\r\n                {resumeData.skills.map(skill =>(\r\n                    <Grid item xs={12} sm={6} md={3}>\r\n                        <Paper elevation={0} className='skill' >\r\n                            <Typography variant='h6' className='skill-title' >\r\n                                {skill.title}\r\n                            </Typography>\r\n                            {skill.description.map(element =>(\r\n                                <Typography variant='body2' className='skill-description' >\r\n                                    <TimelineDot variant={'outlined'} className='timeline-dot' />\r\n                                    {element}\r\n                                </Typography>\r\n                            ))}\r\n                        </Paper>\r\n                    </Grid>\r\n                ))}\r\n                </Grid>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n            {/* Contact */}\r\n            <Grid container spacing={5} className='section pb-45 pt-45'>\r\n                {/*Contact Form*/}\r\n                <Grid item xs={12} lg={7}>\r\n                    <Grid container>\r\n                        <Grid item className='section-title mb-30'>\r\n                            <span></span>\r\n                            <h6 className='section-title-text'>Contact Form</h6>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField fullWidth name='name' label='Name' />\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <TextField fullWidth name='email' label='E-mail' />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField fullWidth name='message' label='Message' multiline rows={4} />\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                   <CustomButton text='Submit' />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                {/*Contact Information*/}\r\n                <Grid item xs={12} lg={5}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item className='section-title mb-30'>\r\n                            <span></span>\r\n                            <h6 className='section-title-text'>Contact Information</h6>\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12}>\r\n                            <Grid container>\r\n                                <Grid item xs={12} >\r\n                                    <Typography className='contact-info-item'>\r\n                                        <span>Address: </span> {resumeData.address}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12} >\r\n                                    <Typography className='contact-info-item'>\r\n                                        <span>Email: </span> {resumeData.email}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12} >\r\n                                    <Typography className='contact-info-item'>\r\n                                        <span>Phone: </span> {resumeData.phone}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        \r\n                        <Grid item xs={12}>\r\n                            <Grid container className='contact-info-socials-container' >\r\n                                {Object.keys(resumeData.socials).map((key) => (\r\n                                    <Grid item className='contact-info-social' >\r\n                                        <a href={resumeData.socials[key].url}>{resumeData.socials[key].icon}</a>\r\n                                    </Grid>\r\n                                ))}\r\n                            </Grid>\r\n                        </Grid>\r\n                            \r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Resume\r\n","C:\\github_projects\\resume\\src\\components\\Timeline\\Timeline.js",["68"],"import React from 'react';\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport WorkIcon from '@material-ui/icons/Work';\r\n\r\nimport './Timeline.css'\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst CustomTimeline = ({title, icon, children}) => {\r\n    return (\r\n        <Timeline className={'timeline'} >\r\n\r\n          <TimelineItem className={'timeline-first-item'} >\r\n            <TimelineSeparator>\r\n              <TimelineDot className={'timeline-dot-header'}>{icon}</TimelineDot>\r\n              <TimelineConnector />\r\n            </TimelineSeparator>\r\n            <TimelineContent className='timeline-content' >\r\n              <Typography variant='h6' className={'timeline-header'}>\r\n                {title}\r\n              </Typography>\r\n            </TimelineContent>\r\n          </TimelineItem>\r\n          {children}\r\n        </Timeline>\r\n    )\r\n}\r\n\r\nexport const CustomTimelineSeparator = () => {\r\n    return (\r\n    <TimelineSeparator className={'timeline-separator-padding'} >\r\n        <TimelineDot variant={'outlined'} className={'timeline-dot'} />\r\n        <TimelineConnector />\r\n    </TimelineSeparator>\r\n    )\r\n}\r\n\r\nexport default CustomTimeline\r\n","C:\\github_projects\\resume\\src\\utils\\resumeData.js",["69","70"],"import React from 'react'\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport profilePhoto from '../assets/images/img.jpg';\r\n\r\nexport default {\r\n    name: 'Steven González',\r\n    title: 'Software Developer',\r\n\r\n    email: 'steven@drys.tech',\r\n    phone: '+506 8634-7798',\r\n    address: 'Guácima, Alajuela, Costa Rica',\r\n\r\n    socials: {\r\n        LinkedIn: {\r\n            url: 'https://www.linkedin.com/in/stevgonzalezb/',\r\n            text: 'stevgonzalezb',\r\n            icon: <LinkedInIcon />\r\n        },\r\n        GitHub: {\r\n            url: 'https://github.com/stevgonzalezb',\r\n            text: 'stevgonzalezb',\r\n            icon: <GitHubIcon />\r\n        }\r\n    },\r\n    about: 'I am passionate about learning and understanding new business models in order to find the best way technology can help to improve the company processes and always giving my value added in every project or task that I am responsible of.',\r\n    experiences: [\r\n        {\r\n            title:'Integration Developer',\r\n            date:'Nov 2019 - Present',\r\n            description: `• Develop API Rest, SOAP Services with Node JS.\r\n            • Support internal applications.\r\n            • Participate taking customer requirements.\r\n            • Back end Development\r\n            • Use technologies such: SQL Server, .NET C#, Javascript, Java, Apache Camel, Visual Basic, GitLab, Node JS, PHP, Redis, Elastic Search, Active MQ, NoSQL DB, SOAP, Rest API, web sockets.`\r\n        },\r\n        {\r\n            title:'Software Engineer',\r\n            date:'Self Employed | Dec 2019  - Present',\r\n            description: `• Implemented Dialogflow to develop and maintenance chatbots and virtual assistant.\r\n            • Integrations with Google Calendar, Google Drive, CRM, cPanel, Web Sites.\r\n            • IT Business & Marketing Consulting.\r\n            • Some technologies used: Firebase, Google Cloud, Google APIs, Payloads for rich message, WhatsApp API, Webhook Responses, Facebook integration, Node JS, JSON, SSH.`\r\n        },\r\n        {\r\n            title:'Implementation Specialist MID',\r\n            date:'Jun 2018  - Oct 2019',\r\n            description: `• Participate taking customer requirements.\r\n            • Lead on the process to define business rules and data mapping.\r\n            • Develop complex reports with SQL Server, Reporting Services, SSIS, etc.\r\n            • AML/Compliance Consulting.\r\n            • Advanced T-SQL business logic development.`\r\n        },\r\n        {\r\n            title:'Software Support',\r\n            date:'May 2016  - May 2018',\r\n            description: `• Main support for different customers from CA and Caribbean.\r\n            • Implemented and train new customers until run the product into production.\r\n            • Lead on situations that work was so much, to achieve the company goal.\r\n            • Used technologies such: SQL Server, T-SQL, MS Access, MS Excel, ETL, Crystal Reports.`\r\n        }\r\n    ],\r\n    educations: [\r\n        {\r\n            title:'Software Enginnering',\r\n            date:'Barchelor, Universidad Técnica Nacional | 2016  - 2021',\r\n            description: '• Beginners student tutoring'\r\n        },\r\n        {\r\n            title:'Technical High School & Networking IT ',\r\n            date:'CTP Jesús Ocaña Rojas | 2012  - 2014',\r\n            description: `• CCNA 1,2 & 3 modules finished.`\r\n        }\r\n    ],\r\n    certifications: [\r\n        {\r\n            title:'Lean Six Sigma Yellow Belt (ICYB)',\r\n            date:'VMEdu Inc. | March 2020  - March 2023',\r\n            description: ''\r\n        },\r\n        {\r\n            title:'Scrum Fundamentals Certified (SFC)',\r\n            date:'VMEdu Inc. | March 2020  - March 2023',\r\n            description: ``\r\n        },\r\n        {\r\n            title:'Advanced SQL for Data Scientists',\r\n            date:'LinkedIn Learning | Feb 2020',\r\n            description: ``\r\n        },\r\n        {\r\n            title:'Business English Level Test',\r\n            date:'Idioma Internacional | May 2020',\r\n            description: `B2+ English Level`\r\n        }\r\n    ],\r\n    services: [\r\n        {\r\n            title: 'Web Dev',\r\n            description:'I have been working with several......',\r\n            icon: <FacebookIcon />\r\n        },\r\n        {\r\n            title: 'Web Dev',\r\n            description:'I have been working with several......',\r\n            icon: <FacebookIcon />\r\n        },\r\n        {\r\n            title: 'Web Dev',\r\n            description:'I have been working with several......',\r\n            icon: <FacebookIcon />\r\n        }\r\n    ],\r\n    skills: [\r\n        {\r\n            title: 'Back End',\r\n            description: ['Node JS', '.NET / C#', 'Python', 'Java', 'Cloud Functions on Google', 'Firebase']\r\n        },\r\n        {\r\n            title: 'Front & Design',\r\n            description: ['Wordpress', 'Elementor', 'React JS', 'HTML', 'CSS']\r\n        },\r\n        {\r\n            title: 'Data Structures',\r\n            description: ['SQL Server', 'MySQL', 'NoSQL DB', 'Redis', 'Active MQ', 'Rabbit MQ', 'Elastic Search']\r\n        },\r\n        {\r\n            title: 'Source Control',\r\n            description: ['Git', 'GitHub', 'GitLab', 'SourceSafe']\r\n        }\r\n    ],\r\n    portfolio: [\r\n        {\r\n            tag: 'React',\r\n            image: \"https://direct.rhapsody.com/imageserver/images/alb.120624897/500x500.jpg\",\r\n            title: 'Resume 1',\r\n            caption: 'Short descriptoin',\r\n            description: 'thi is my prpject description.',\r\n            links: [\r\n                {\r\n                    link: 'https://google.com',\r\n                    icon: <FacebookIcon />\r\n                },\r\n                {\r\n                    link: 'https://google.com',\r\n                    icon: <FacebookIcon />\r\n                },\r\n                {\r\n                    link: 'https://google.com',\r\n                    icon: <FacebookIcon />\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            tag: 'React',\r\n            image: \"https://direct.rhapsody.com/imageserver/images/alb.120624897/500x500.jpg\",\r\n            title: 'Resume 2',\r\n            caption: 'Short descriptoin',\r\n            description: 'thi is my prpject description.',\r\n            links: [\r\n                {\r\n                    link: 'https://google.com',\r\n                    icon: <FacebookIcon />\r\n                },\r\n                {\r\n                    link: 'https://google.com',\r\n                    icon: <FacebookIcon />\r\n                },\r\n                {\r\n                    link: 'https://google.com',\r\n                    icon: <FacebookIcon />\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            tag: 'Backend',\r\n            image: 'https://direct.rhapsody.com/imageserver/images/alb.120624897/500x500.jpg',\r\n            title: 'python 1',\r\n            caption: 'Short descriptoin',\r\n            description: 'thi is my prpject description.',\r\n            links: [\r\n                {\r\n                    link: 'https://google.com',\r\n                    icon: <FacebookIcon />\r\n                },\r\n                {\r\n                    link: 'https://google.com',\r\n                    icon: <FacebookIcon />\r\n                },\r\n                {\r\n                    link: 'https://google.com',\r\n                    icon: <FacebookIcon />\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}","C:\\github_projects\\resume\\src\\components\\Button\\Button.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":22,"column":11,"nodeType":"77","endLine":22,"endColumn":43},{"ruleId":"78","severity":1,"message":"79","line":2,"column":10,"nodeType":"80","messageId":"81","endLine":2,"endColumn":16},{"ruleId":"78","severity":1,"message":"82","line":2,"column":18,"nodeType":"80","messageId":"81","endLine":2,"endColumn":22},{"ruleId":"78","severity":1,"message":"83","line":2,"column":24,"nodeType":"80","messageId":"81","endLine":2,"endColumn":35},{"ruleId":"78","severity":1,"message":"84","line":2,"column":50,"nodeType":"80","messageId":"81","endLine":2,"endColumn":61},{"ruleId":"78","severity":1,"message":"85","line":3,"column":10,"nodeType":"80","messageId":"81","endLine":3,"endColumn":14},{"ruleId":"86","severity":1,"message":"87","line":28,"column":71,"nodeType":"88","messageId":"89","endLine":28,"endColumn":73},{"ruleId":"75","severity":1,"message":"76","line":34,"column":25,"nodeType":"77","endLine":34,"endColumn":80},{"ruleId":"75","severity":1,"message":"76","line":24,"column":21,"nodeType":"77","endLine":24,"endColumn":89},{"ruleId":"86","severity":1,"message":"87","line":41,"column":70,"nodeType":"88","messageId":"89","endLine":41,"endColumn":72},{"ruleId":"86","severity":1,"message":"87","line":45,"column":74,"nodeType":"88","messageId":"89","endLine":45,"endColumn":76},{"ruleId":"86","severity":1,"message":"87","line":56,"column":35,"nodeType":"88","messageId":"89","endLine":56,"endColumn":37},{"ruleId":"86","severity":1,"message":"87","line":56,"column":62,"nodeType":"88","messageId":"89","endLine":56,"endColumn":64},{"ruleId":"78","severity":1,"message":"90","line":2,"column":28,"nodeType":"80","messageId":"81","endLine":2,"endColumn":32},{"ruleId":"78","severity":1,"message":"91","line":8,"column":8,"nodeType":"80","messageId":"81","endLine":8,"endColumn":16},{"ruleId":"78","severity":1,"message":"92","line":5,"column":8,"nodeType":"80","messageId":"81","endLine":5,"endColumn":20},{"ruleId":"93","severity":1,"message":"94","line":7,"column":1,"nodeType":"95","endLine":198,"endColumn":2},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'FormControl' is defined but never used.","'NavDropdown' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Icon' is defined but never used.","'WorkIcon' is defined but never used.","'profilePhoto' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]